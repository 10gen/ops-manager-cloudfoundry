---
groups:
  - name: mongodb-on-demand
    jobs:
      - delete-tile
      - deploy-tile-old
      - deploy-mongodb-service
      - build-tile
      - use-application
      - update-tile-version
      - check-application
      - cleanup
      - smoke-tests
      - shipit
  - name: versioning
    jobs:
      - patch
      - major
      - minor

constant: &tile-version "1.2.6"

resources:
  - name: ops-manager-cloudfoundry
    type: git
    source:
      branch: ((git-branch-name))
      uri: git@github.com:10gen/ops-manager-cloudfoundry.git
      private_key: ((git-private-key))

  - name: stemcell
    type: pivnet
    source:
      api_token: ((pivnet-token))
      product_slug: stemcells-ubuntu-xenial
      product_version: "315.*"

  - name: stemcell-old
    type: pivnet
    source:
      api_token: ((pivnet-token))
      product_slug: stemcells-ubuntu-xenial
      product_version: "170.*"

  # - name: tileold
  #   type: pivnet
  #   source:
  #     api_token: ((pivnet-token))
  #     product_slug: mongodb-on-demand
  #     product_version: *tile-version

  - name: tileold
    type: s3
    source:
      bucket: ((release-bucket))
      regexp: mongodb-on-demand-(1.2.6*).pivotal
      region_name: ((aws-region))
      access_key_id: ((aws-access-key))
      secret_access_key: ((aws-secret-access-key))

  - name: version
    type: semver
    source:
      driver: s3
      bucket: ((aws-bucket))
      key: version
      region_name: ((aws-region))
      access_key_id: ((aws-access-key))
      secret_access_key: ((aws-secret-access-key))
      initial_version: 1.1.1

  - name: artifacts
    type: s3
    source:
      bucket: ((aws-bucket))
      region_name: ((aws-region))
      regexp: mongodb-on-demand-(1.*).pivotal
      access_key_id: ((aws-access-key))
      secret_access_key: ((aws-secret-access-key))

  - name: release
    type: s3
    source:
      bucket: ((release-bucket))
      regexp: mongodb-on-demand-(1.*).pivotal
      region_name: ((aws-region))
      access_key_id: ((aws-access-key))
      secret_access_key: ((aws-secret-access-key))

  - name: on-demand-service-broker-release
    type: s3
    source:
      bucket: ((aws-bucket))
      region_name: ((aws-region))
      regexp: on-demand-service-broker-(.*).tgz
      access_key_id: ((aws-access-key))
      secret_access_key: ((aws-secret-access-key))

  - name: mongodb
    type: s3
    source:
      bucket: ((aws-bucket))
      region_name: ((aws-region))
      regexp: mongodb-linux-x86_64-ubuntu1604-(.*).tgz

      access_key_id: ((aws-access-key))
      secret_access_key: ((aws-secret-access-key))

  - name: pcf-mongodb-helpers
    type: s3
    source:
      bucket: ((aws-bucket))
      region_name: ((aws-region))
      regexp: pcf-mongodb-helpers-(.*).tgz
      access_key_id: ((aws-access-key))
      secret_access_key: ((aws-secret-access-key))

  - name: syslog-migration-release
    type: s3
    source:
      bucket: ((aws-bucket))
      region_name: ((aws-region))
      regexp: syslog-migration-(.*).tgz
      access_key_id: ((aws-access-key))
      secret_access_key: ((aws-secret-access-key))

  - name: bpm-release
    type: s3
    source:
      bucket: ((aws-bucket))
      region_name: ((aws-region))
      regexp: bpm-release-(.*).tgz
      access_key_id: ((aws-access-key))
      secret_access_key: ((aws-secret-access-key))

  - name: "build-status"
    type: "github-status"
    source:
      repository: 10gen/ops-manager-cloudfoundry
      access_token: ((repo-github-token))
      context: build-tile

  - name: "check-service-status"
    type: "github-status"
    source:
      repository: 10gen/ops-manager-cloudfoundry
      access_token: ((repo-github-token))
      context: check-application

  - name: "update-tile-status"
    type: "github-status"
    source:
      repository: 10gen/ops-manager-cloudfoundry
      access_token: ((repo-github-token))
      context: update-tile

  - name: "deploy-status"
    type: "github-status"
    source:
      repository: 10gen/ops-manager-cloudfoundry
      access_token: ((repo-github-token))
      context: deploy-tile

  - name: "check-app-status"
    type: "github-status"
    source:
      repository: 10gen/ops-manager-cloudfoundry
      access_token: ((repo-github-token))
      context: application-check

  - name: "cleanup-status"
    type: "github-status"
    source:
      repository: 10gen/ops-manager-cloudfoundry
      access_token: ((repo-github-token))
      context: cleanup

  - name: "deploy-service-status"
    type: "github-status"
    source:
      repository: 10gen/ops-manager-cloudfoundry
      access_token: ((repo-github-token))
      context: deploy-service

  - name: "delete-tile-status"
    type: "github-status"
    source:
      repository: 10gen/ops-manager-cloudfoundry
      access_token: ((repo-github-token))
      context: delete-tile

  - name: "test-status"
    type: "github-status"
    source:
      repository: 10gen/ops-manager-cloudfoundry
      access_token: ((repo-github-token))
      context: smoke-tests
resource_types:
  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final
  - name: slack
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
  - name: "github-status"
    type: "docker-image"
    source:
      repository: "dpb587/github-status-resource"
      tag: "master"

jobs:
  - name: delete-tile
    serial: true
    serial_groups: [same-deployment]
    build_logs_to_retain: 50
    plan:
      - get: version
      - get: ops-manager-cloudfoundry
        trigger: true
      - task: delete-tile
        file: ops-manager-cloudfoundry/ci/tasks/delete-tile/task.yml
        params:
          PCF_URL: ((pcf-url))
          PCF_USERNAME: ((pcf-username))
          PCF_PASSWORD: ((pcf-password))
        on_failure:
          put: "delete-tile-status"
          params:
            state: "failure"
            commit: "ops-manager-cloudfoundry"
        on_error:
          put: "delete-tile-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
        on_abort:
          put: "delete-tile-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
            description: aborted
      - put: "delete-tile-status"
        params:
          state: "success"
          commit: "ops-manager-cloudfoundry"

  - name: build-tile
    serial: true
    build_logs_to_retain: 5
    plan:
      - get: ops-manager-cloudfoundry
        trigger: true
      - in_parallel:
          - get: on-demand-service-broker-release
            params:
              filename: on-demand-service-broker-(.*).tgz
          - get: syslog-migration-release
            params:
              filename: syslog-migration-(.*).tgz
          - get: pcf-mongodb-helpers
            params:
              filename: pcf-mongodb-helpers-(.*).tgz
          - get: bpm-release
            params:
              filename: bpm-release-(.*).tgz
          - get: mongodb
            params:
              filename: mongodb-linux-x86_64-ubuntu1604-(.*).tgz
          - get: version
            params:
              pre: rc
          - put: "build-status"
            params:
              state: "pending"
              commit: "ops-manager-cloudfoundry"
      - in_parallel:
          - task: lint
            file: ops-manager-cloudfoundry/ci/tasks/lint/task.yml
          - task: build-tile
            file: ops-manager-cloudfoundry/ci/tasks/build-tile/task.yml
            params:
              AWS_KEY: ((aws-access-key))
              AWS_SECRET_KEY: ((aws-secret-access-key))
        on_failure:
          put: "build-status"
          params:
            state: "failure"
            commit: "ops-manager-cloudfoundry"
        on_error:
          put: "build-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
        on_abort:
          put: "build-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
            description: aborted
      - in_parallel:
          - put: artifacts
            params:
              file: artifacts/mongodb-on-demand-*.pivotal
          - put: version
            params:
              pre: rc
          - put: "build-status"
            params:
              state: "success"
              commit: "ops-manager-cloudfoundry"

  - name: deploy-tile-old
    serial: true
    serial_groups: [same-deployment]
    build_logs_to_retain: 50
    plan:
      - get: ops-manager-cloudfoundry
        trigger: true
        passed: [delete-tile]
      - get: stemcell-old
        params:
          globs: [((stemcell-architecture))]
      - get: tileold
      - task: deploy-tile-old
        file: ops-manager-cloudfoundry/ci/tasks/deploy-tile-old/task.yml
        params:
          PCF_URL: ((pcf-url))
          PCF_USERNAME: ((pcf-username))
          PCF_PASSWORD: ((pcf-password))
          CONFIG: ((env-config))
          UPDATE_PAS: false
          VERSION: *tile-version
        on_failure:
          put: "deploy-status"
          params:
            state: "failure"
            commit: "ops-manager-cloudfoundry"
        on_error:
          put: "deploy-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
        on_abort:
          put: "deploy-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
            description: aborted
      - put: "deploy-status"
        params:
          state: "success"
          commit: "ops-manager-cloudfoundry"

  - name: deploy-mongodb-service
    serial: true
    serial_groups: [same-deployment]
    build_logs_to_retain: 50
    plan:
      - get: ops-manager-cloudfoundry
        trigger: true
        passed: [deploy-tile-old]
      - task: deploy-mongodb-service
        file: ops-manager-cloudfoundry/ci/tasks/deploy-mongodb-service/task-create-service.yml
        params:
          PCF_URL: ((pcf-url))
          PCF_USERNAME: ((pcf-username))
          PCF_PASSWORD: ((pcf-password))
          INSTALL_TIMEOUT: 120
          SET_PLAN: replica_set_small
          BACKUP_ENABLED: true
          MONGO_VERSION: 4.0.9-ent
        on_failure:
          put: "deploy-service-status"
          params:
            state: "failure"
            commit: "ops-manager-cloudfoundry"
        on_error:
          put: "deploy-service-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
        on_abort:
          put: "deploy-service-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
            description: aborted
      - put: "deploy-service-status"
        params:
          state: "success"
          commit: "ops-manager-cloudfoundry"

  - name: use-application
    serial: true
    build_logs_to_retain: 50
    plan:
      - get: ops-manager-cloudfoundry
        trigger: true
        passed: [deploy-mongodb-service]
      - task: use application
        file: ops-manager-cloudfoundry/ci/tasks/application-check/task-put.yml
        params:
          PCF_URL: ((pcf-url))
          PCF_USERNAME: ((pcf-username))
          PCF_PASSWORD: ((pcf-password))
        on_failure:
          put: "check-service-status"
          params:
            state: "failure"
            commit: "ops-manager-cloudfoundry"
        on_error:
          put: "check-service-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
        on_abort:
          put: "check-service-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
            description: aborted
      - put: "check-service-status"
        params:
          state: "success"
          commit: "ops-manager-cloudfoundry"

  - name: update-tile-version
    serial: true
    serial_groups: [same-deployment]
    build_logs_to_retain: 50
    plan:
      - get: ops-manager-cloudfoundry
        trigger: true
        passed: [deploy-mongodb-service, build-tile]
      - get: deploy-service-status
      - get: artifacts
        params:
          file: artifacts/mongodb-on-demand-*.pivotal
      - get: version
      - get: stemcell
        params:
          globs: [((stemcell-architecture))]
      - task: deploy-tile
        file: ops-manager-cloudfoundry/ci/tasks/deploy-tile/task.yml
        params:
          PCF_URL: ((pcf-url))
          PCF_USERNAME: ((pcf-username))
          PCF_PASSWORD: ((pcf-password))
          CONFIG: ((env-config))
          UPDATE_PAS: false
        on_failure:
          put: "update-tile-status"
          params:
            state: "failure"
            commit: "ops-manager-cloudfoundry"
        on_error:
          put: "update-tile-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
        on_abort:
          put: "update-tile-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
            description: aborted
      - put: "update-tile-status"
        params:
          state: "success"
          commit: "ops-manager-cloudfoundry"

  - name: check-application
    serial: true
    serial_groups: [same-deployment]
    build_logs_to_retain: 50
    plan:
      - get: ops-manager-cloudfoundry
        trigger: true
        passed: [update-tile-version]
      - task: check application
        file: ops-manager-cloudfoundry/ci/tasks/application-check/task-get.yml
        params:
          PCF_URL: ((pcf-url))
          PCF_USERNAME: ((pcf-username))
          PCF_PASSWORD: ((pcf-password))
        on_failure:
          put: "check-app-status"
          params:
            state: "failure"
            commit: "ops-manager-cloudfoundry"
        on_error:
          put: "check-app-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
        on_abort:
          put: "check-app-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
            description: aborted
      - put: "check-app-status"
        params:
          state: "success"
          commit: "ops-manager-cloudfoundry"

  - name: cleanup
    serial: true
    build_logs_to_retain: 50
    plan:
      - get: ops-manager-cloudfoundry
        trigger: true
        passed: [check-application]
      - task: cleaning - delete service and application
        file: ops-manager-cloudfoundry/ci/tasks/deploy-mongodb-service/task-delete-service.yml
        params:
          PCF_URL: ((pcf-url))
          PCF_USERNAME: ((pcf-username))
          PCF_PASSWORD: ((pcf-password))
        on_failure:
          put: "cleanup-status"
          params:
            state: "failure"
            commit: "ops-manager-cloudfoundry"
        on_error:
          put: "cleanup-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
        on_abort:
          put: "cleanup-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
            description: aborted
      - put: "cleanup-status"
        params:
          state: "success"
          commit: "ops-manager-cloudfoundry"

  - name: smoke-tests
    serial: true
    serial_groups: [same-deployment]
    build_logs_to_retain: 50
    plan:
      - get: ops-manager-cloudfoundry
        trigger: true
        passed: [check-application]
      - in_parallel:
          - task: smoke-tests standalone
            file: ops-manager-cloudfoundry/ci/tasks/smoke-tests/task.yml
            params:
              PCF_URL: ((pcf-url))
              PCF_USERNAME: ((pcf-username))
              PCF_PASSWORD: ((pcf-password))
              PLAN_NAMES: '["standalone_small"]'
              BACKUP_ENABLED: '["false"]'
              SSL_ENABLED: '["false"]'
              MONGO_VERSION: '["4.0.9-ent"]'
              CONFIG: ((env-config))
          - task: smoke-tests replica set
            file: ops-manager-cloudfoundry/ci/tasks/smoke-tests/task.yml
            params:
              PCF_URL: ((pcf-url))
              PCF_USERNAME: ((pcf-username))
              PCF_PASSWORD: ((pcf-password))
              PLAN_NAMES: '["replica_set_small"]'
              BACKUP_ENABLED: '["false"]'
              SSL_ENABLED: '["false"]'
              MONGO_VERSION: '["4.0.9-ent"]'
              CONFIG: ((env-config))
          - task: smoke-tests sharded
            file: ops-manager-cloudfoundry/ci/tasks/smoke-tests/task.yml
            params:
              PCF_URL: ((pcf-url))
              PCF_USERNAME: ((pcf-username))
              PCF_PASSWORD: ((pcf-password))
              PLAN_NAMES: '["sharded_cluster_small"]'
              BACKUP_ENABLED: '["false"]'
              SSL_ENABLED: '["false"]'
              MONGO_VERSION: '["4.0.9-ent"]'
              CONFIG: ((env-config))
        on_failure:
          put: "test-status"
          params:
            state: "failure"
            commit: "ops-manager-cloudfoundry"
        on_error:
          put: "test-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
        on_abort:
          put: "test-status"
          params:
            state: "error"
            commit: "ops-manager-cloudfoundry"
            description: aborted
      - put: "test-status"
        params:
          state: "success"
          commit: "ops-manager-cloudfoundry"

  - name: shipit
    serial: true
    serial_groups: [same-deployment]
    build_logs_to_retain: 50
    plan:
      - get: ops-manager-cloudfoundry
        passed: [smoke-tests]
      - get: on-demand-service-broker-release
        params:
          filename: on-demand-service-broker-(.*).tgz
      - get: syslog-migration-release
        params:
          filename: syslog-migration-(.*).tgz
      - get: pcf-mongodb-helpers
        params:
          filename: pcf-mongodb-helpers-(.*).tgz
      - get: bpm-release
        params:
          filename: bpm-release-(.*).tgz
      - get: mongodb
        params:
          filename: mongodb-linux-x86_64-ubuntu1604-(.*).tgz
      - get: version
        params:
          bump: final
      - task: build-tile
        file: ops-manager-cloudfoundry/ci/tasks/build-tile/task.yml
        params:
          AWS_KEY: ((aws-access-key))
          AWS_SECRET_KEY: ((aws-secret-access-key))
      - task: shipit
        file: ops-manager-cloudfoundry/ci/tasks/shipit/task.yml
        params:
          RELEASE_BUCKET_NAME: ((release-bucket))
          AWS_KEY: ((aws-access-key))
          AWS_SECRET_KEY: ((aws-secret-access-key))
      - put: release
        params:
          file: release/mongodb-on-demand-*.pivotal
          acl: public-read

  - name: major
    serial: true
    plan:
      - do:
          - get: version
            trigger: false
            params:
              bump: major
          - put: version
            params:
              file: version/number

  - name: minor
    serial: true
    plan:
      - do:
          - get: version
            trigger: false
            params:
              bump: minor
          - put: version
            params:
              file: version/number

  - name: patch
    serial: true
    plan:
      - do:
          - get: version
            trigger: false
            params:
              bump: patch
          - put: version
            params:
              file: version/number
