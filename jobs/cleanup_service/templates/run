#!/bin/bash
# vim: set ft=sh

set -e

<% conn = link('mongodb_config_agent') %>

source /var/vcap/packages/mongodb-config-agent/mongo_utils.sh
export PATH=/var/vcap/packages/jq/bin:$PATH

export MONGO_OM_URL='<%= conn.p('mongo_ops.url').chomp("/") %>'
export MONGO_OM_USER='<%= conn.p('mongo_ops.username') %>'
export MONGO_OM_API_KEY='<%= conn.p('mongo_ops.api_key') %>'
export MONGO_OM_GROUP_ID='<%= conn.p('mongo_ops.group_id') %>'

<% if conn.p("mongo_ops.backup_enabled") %>

<% if conn.p("mongo_ops.plan_id") == 'replica_set' %>
    clusters=($(om_api_call "GET" "clusters" | jq -r ".results[].id"))
<% elsif conn.p("mongo_ops.plan_id") == 'sharded_cluster' %>
    clusters=($(om_api_call "GET" "clusters" | jq -r '.results[] | select(.typeName == "SHARDED_REPLICA_SET").id'))
<% end %>


  for cluster in "${clusters[@]}"
  do
      om_api_call "PATCH" "backupConfigs/${cluster}" '{"statusName": "STOPPED"}'
      om_api_call "PATCH" "backupConfigs/${cluster}" '{"statusName": "TERMINATING"}'
      while true
      do
	stat=$(om_api_call "GET" "backupConfigs/${cluster}" | jq -r ".statusName")
	if [ $stat == "INACTIVE" ]; then
	    break
	else
	    sleep 5
	fi
      done
  done


<% end %>

om_api_call "DELETE" ""
