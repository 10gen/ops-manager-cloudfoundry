#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status

source /var/vcap/packages/mongodb-config-agent/utils.sh

RUN_DIR=/var/vcap/sys/run/mongodb_config_agent
LOG_DIR=/var/vcap/sys/log/mongodb_config_agent
TMP_DIR=/var/vcap/sys/tmp/mongodb_config_agent
STORE_DIR=/var/vcap/store/mongodb_config_agent
mkdir -p ${RUN_DIR} ${LOG_DIR} ${TMP_DIR} ${STORE_DIR}

PIDFILE=${RUN_DIR}/mongodb_config_agent.pid

case $1 in

  start)
    pid_guard ${PIDFILE} "mongodb_config_agent"
    echo $$ > ${PIDFILE}

    <% hosts = link("mongod_node").instances.collect{ |x| "#{x.address}" }.join(",") %>

    exec /var/vcap/packages/mongodb-config-agent/bin/mongodb-config-agent \
      <% if_p('mongo_ops.url') do |url| %>-url <%= url.chomp("/") %> <% end %> \
      -username <%= p('mongo_ops.username') %> \
      -api-key <%= p('mongo_ops.api_key') %> \
      -group <%= p('mongo_ops.group_id') %> \
      -plan <%= p('mongo_ops.plan_id') %> \
      -nodes "<%= hosts %>" \
      -admin-password <%= p('mongo_ops.admin_password') %> \
      -engine-version <%= p('mongo_ops.engine_version') %> \
      -replicas <%= p('mongo_ops.replicas') %> \
      >>  ${LOG_DIR}/mongodb_config_agent.stdout.log \
      2>> ${LOG_DIR}/mongodb_config_agent.stderr.log
    ;;

  stop)
    kill_and_wait ${PIDFILE}
    ;;
  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
