#!/usr/bin/env bash
# vim: set ft=sh

set -ex

exit 1

<% conn = link('mongodb_config_agent') %>

source /var/vcap/packages/mongodb-config-agent/mongo_utils.sh
export PATH=/var/vcap/packages/jq/bin:$PATH

export MONGO_OM_URL='<%= conn.p('mongo_ops.url').chomp("/") %>'
export MONGO_OM_USER='<%= conn.p('mongo_ops.username') %>'
export MONGO_OM_API_KEY='<%= conn.p('mongo_ops.api_key') %>'
export MONGO_OM_GROUP_ID='<%= conn.p('mongo_ops.group_id') %>'

<% if conn.p("mongo_ops.backup_enabled") %>
while true
do
<% if conn.p("mongo_ops.plan_id") == 'replica_set' %>
  clusters=($(om_api_call "GET" "clusters" | jq -r ".results[].id"))
<% elsif conn.p("mongo_ops.plan_id") == 'sharded_cluster' %>
  clusters=($(om_api_call "GET" "clusters" | jq -r '.results[] | select(.typeName == "SHARDED_REPLICA_SET").id'))
<% end %>

  if [ ${#clusters[@]} -eq 0 ]; then
    sleep 5
    continue
  fi

  for cluster in "${clusters[@]}"
  do
   stat=$(om_api_call "GET" "backupConfigs/${cluster}" | jq -r ".statusName")
   if [ $stat != "STARTED" ]; then
     om_api_call "PATCH" "backupConfigs/${cluster}" '{"statusName": "STARTED", "storageEngineName": "WIRED_TIGER", "syncSource": "SECONDARY"}'
   fi
  done

  break
done
<% end %>
